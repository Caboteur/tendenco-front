{"ast":null,"code":"import _defineProperty from\"D:\\\\Documents\\\\app-file\\\\tedenco\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"D:\\\\Documents\\\\app-file\\\\tedenco\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Documents\\\\app-file\\\\tedenco\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"D:\\\\Documents\\\\app-file\\\\tedenco\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"D:\\\\Documents\\\\app-file\\\\tedenco\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\Documents\\\\app-file\\\\tedenco\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';var ApiWikipedia=/*#__PURE__*/function(_React$Component){_inherits(ApiWikipedia,_React$Component);var _super=_createSuper(ApiWikipedia);function ApiWikipedia(props){var _this;_classCallCheck(this,ApiWikipedia);_this=_super.call(this,props);_this.useWikiSearchEngine=function(e){e.preventDefault();_this.setState({wikiSearchReturnValues:[]});var pointerToThis=_assertThisInitialized(_this);var url=\"https://fr.wikipedia.org/w/api.php\";var params={action:'query',list:'search',srsearch:_this.state.WikiSearchTerms,format:'json'};url=url+'?origin=*';Object.keys(params).forEach(function(key){url+=\"&\"+key+\"=\"+params[key];});fetch(url).then(function(response){return response.json();}).then(function(response){for(var key in response.query.search){pointerToThis.state.wikiSearchReturnValues.push({queryResultPageFullURL:'no link',queryResultPageID:response.query.search[key].pageid,queryResultPageTitle:response.query.search[key].title,queryResultPageSnippet:response.query.search[key].snippet});}}).then(function(response){var _loop=function _loop(){// console.log(pointerToThis.state.wikiSearchReturnValues);\nvar page=pointerToThis.state.wikiSearchReturnValues[key2];var pageID=page.queryResultPageID;var urlForRetrievingPageURLByPageID=\"https://en.wikipedia.org/w/api.php?origin=*&action=query&prop=info&pageids=\".concat(pageID,\"&inprop=url&format=json\");fetch(urlForRetrievingPageURLByPageID).then(function(response){return response.json();}).then(function(response){page.queryResultPageFullURL=response.query.pages[pageID].fullurl;pointerToThis.forceUpdate();});};for(var key2 in pointerToThis.state.wikiSearchReturnValues){_loop();}});};_this.changeWikiSearchTerms=function(e){_this.setState({WikiSearchTerms:e.target.value});};_this.state={wikiSearchReturnValues:[],wikiSearchTerms:''};return _this;}_createClass(ApiWikipedia,[{key:\"render\",value:function render(){var _React$createElement;var wikiSearchResults=[];console.log(this.state.wikiSearchReturnValues);console.log(wikiSearchResults);return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Wikipedia Search Engine\"),/*#__PURE__*/React.createElement(\"form\",{action:\"\"},/*#__PURE__*/React.createElement(\"input\",(_React$createElement={id:\"inutt\",value:this.state.wikiSearchTerms,type:\"text\"},_defineProperty(_React$createElement,\"value\",this.state.WikiSearchTerms||''),_defineProperty(_React$createElement,\"onChange\",this.changeWikiSearchTerms),_defineProperty(_React$createElement,\"placeholder\",this.state.search),_React$createElement)),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",onClick:this.useWikiSearchEngine},\"Search\")));}}]);return ApiWikipedia;}(React.Component);export default ApiWikipedia;","map":{"version":3,"sources":["D:/Documents/app-file/tedenco/src/components/Api/Api-wikipedia.js"],"names":["React","ApiWikipedia","props","useWikiSearchEngine","e","preventDefault","setState","wikiSearchReturnValues","pointerToThis","url","params","action","list","srsearch","state","WikiSearchTerms","format","Object","keys","forEach","key","fetch","then","response","json","query","search","push","queryResultPageFullURL","queryResultPageID","pageid","queryResultPageTitle","title","queryResultPageSnippet","snippet","page","key2","pageID","urlForRetrievingPageURLByPageID","pages","fullurl","forceUpdate","changeWikiSearchTerms","target","value","wikiSearchTerms","wikiSearchResults","console","log","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nclass ApiWikipedia extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      wikiSearchReturnValues: [],\r\n      wikiSearchTerms: ''\r\n    }\r\n  }\r\n\r\n\r\n\r\n  useWikiSearchEngine = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      wikiSearchReturnValues: []\r\n    });\r\n\r\n    const pointerToThis = this;\r\n\r\n    var url = \"https://fr.wikipedia.org/w/api.php\";\r\n\r\n    var params = {\r\n      action: 'query',\r\n      list: 'search',\r\n      srsearch: this.state.WikiSearchTerms,\r\n      format: 'json'\r\n    };\r\n\r\n    url = url + '?origin=*';\r\n    Object.keys(params).forEach((key) => {\r\n      url += \"&\" + key + \"=\" + params[key];\r\n    });\r\n\r\n    fetch(url)\r\n      .then(\r\n        function (response) {\r\n          return response.json();\r\n        }\r\n      )\r\n      .then(\r\n        function (response) {\r\n\r\n\r\n          for (var key in response.query.search) {\r\n            pointerToThis.state.wikiSearchReturnValues.push({\r\n              queryResultPageFullURL: 'no link',\r\n              queryResultPageID: response.query.search[key].pageid,\r\n              queryResultPageTitle: response.query.search[key].title,\r\n              queryResultPageSnippet: response.query.search[key].snippet\r\n            });\r\n          }\r\n        }\r\n      )\r\n      .then(\r\n        function (response) {\r\n          for (var key2 in pointerToThis.state.wikiSearchReturnValues) {\r\n            // console.log(pointerToThis.state.wikiSearchReturnValues);\r\n            let page = pointerToThis.state.wikiSearchReturnValues[key2];\r\n            let pageID = page.queryResultPageID;\r\n            let urlForRetrievingPageURLByPageID = `https://en.wikipedia.org/w/api.php?origin=*&action=query&prop=info&pageids=${pageID}&inprop=url&format=json`;\r\n\r\n            fetch(urlForRetrievingPageURLByPageID)\r\n              .then(\r\n                function (response) {\r\n                  return response.json();\r\n                }\r\n              )\r\n              .then(\r\n                function (response) {\r\n                  page.queryResultPageFullURL = response.query.pages[pageID].fullurl;\r\n\r\n                  pointerToThis.forceUpdate();\r\n                }\r\n              )\r\n          }\r\n        }\r\n      )\r\n  }\r\n\r\n  changeWikiSearchTerms = (e) => {\r\n    this.setState({\r\n      WikiSearchTerms: e.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let wikiSearchResults = [];\r\n     console.log(this.state.wikiSearchReturnValues);\r\n\r\n\r\n\r\n    console.log(wikiSearchResults);\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Wikipedia Search Engine</h1>\r\n        <form action=\"\">\r\n          <input id=\"inutt\" value={this.state.wikiSearchTerms} type=\"text\" value={this.state.WikiSearchTerms || ''} onChange={this.changeWikiSearchTerms} placeholder={this.state.search} />\r\n          <button type='submit' onClick={this.useWikiSearchEngine}>Search</button>\r\n        </form>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ApiWikipedia;\r\n"]},"metadata":{},"sourceType":"module"}