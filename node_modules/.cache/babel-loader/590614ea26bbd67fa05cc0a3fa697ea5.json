{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\app-file\\\\tedenco\\\\src\\\\components\\\\Api\\\\Api-wikipedia.js\";\nimport React from 'react';\n\nclass ApiWikipedia extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.useWikiSearchEngine = e => {\n      e.preventDefault();\n      this.setState({\n        wikiSearchReturnValues: []\n      });\n      const pointerToThis = this;\n      var url = \"https://fr.wikipedia.org/w/api.php\";\n      var params = {\n        action: 'query',\n        list: 'search',\n        srsearch: this.state.WikiSearchTerms,\n        format: 'json'\n      };\n      url = url + '?origin=*';\n      Object.keys(params).forEach(key => {\n        url += \"&\" + key + \"=\" + params[key];\n      });\n      fetch(url).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        for (var key in response.query.search) {\n          pointerToThis.state.wikiSearchReturnValues.push({\n            queryResultPageFullURL: 'no link',\n            queryResultPageID: response.query.search[key].pageid,\n            queryResultPageTitle: response.query.search[key].title,\n            queryResultPageSnippet: response.query.search[key].snippet\n          });\n        }\n      }).then(function (response) {\n        for (var key2 in pointerToThis.state.wikiSearchReturnValues) {\n          // console.log(pointerToThis.state.wikiSearchReturnValues);\n          let page = pointerToThis.state.wikiSearchReturnValues[key2];\n          let pageID = page.queryResultPageID;\n          let urlForRetrievingPageURLByPageID = `https://en.wikipedia.org/w/api.php?origin=*&action=query&prop=info&pageids=${pageID}&inprop=url&format=json`;\n          fetch(urlForRetrievingPageURLByPageID).then(function (response) {\n            return response.json();\n          }).then(function (response) {\n            page.queryResultPageFullURL = response.query.pages[pageID].fullurl;\n            pointerToThis.forceUpdate();\n          });\n        }\n      });\n    };\n\n    this.changeWikiSearchTerms = e => {\n      this.setState({\n        WikiSearchTerms: e.target.value\n      });\n    };\n\n    this.state = {\n      wikiSearchReturnValues: [],\n      wikiSearchTerms: ''\n    };\n  }\n\n  render() {\n    let wikiSearchResults = [];\n    console.log(this.state.wikiSearchReturnValues);\n    console.log(wikiSearchResults);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, \"Wikipedia Search Engine\"), /*#__PURE__*/React.createElement(\"form\", {\n      action: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"inutt\",\n      value: this.state.wikiSearchTerms,\n      type: \"text\",\n      value: this.state.WikiSearchTerms || '',\n      onChange: this.changeWikiSearchTerms,\n      placeholder: this.state.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.useWikiSearchEngine,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, \"Search\")));\n  }\n\n}\n\nexport default ApiWikipedia;","map":{"version":3,"sources":["D:/Documents/app-file/tedenco/src/components/Api/Api-wikipedia.js"],"names":["React","ApiWikipedia","Component","constructor","props","useWikiSearchEngine","e","preventDefault","setState","wikiSearchReturnValues","pointerToThis","url","params","action","list","srsearch","state","WikiSearchTerms","format","Object","keys","forEach","key","fetch","then","response","json","query","search","push","queryResultPageFullURL","queryResultPageID","pageid","queryResultPageTitle","title","queryResultPageSnippet","snippet","key2","page","pageID","urlForRetrievingPageURLByPageID","pages","fullurl","forceUpdate","changeWikiSearchTerms","target","value","wikiSearchTerms","render","wikiSearchResults","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nclass ApiWikipedia extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      wikiSearchReturnValues: [],\r\n      wikiSearchTerms: ''\r\n    }\r\n  }\r\n\r\n\r\n\r\n  useWikiSearchEngine = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      wikiSearchReturnValues: []\r\n    });\r\n\r\n    const pointerToThis = this;\r\n\r\n    var url = \"https://fr.wikipedia.org/w/api.php\";\r\n\r\n    var params = {\r\n      action: 'query',\r\n      list: 'search',\r\n      srsearch: this.state.WikiSearchTerms,\r\n      format: 'json'\r\n    };\r\n\r\n    url = url + '?origin=*';\r\n    Object.keys(params).forEach((key) => {\r\n      url += \"&\" + key + \"=\" + params[key];\r\n    });\r\n\r\n    fetch(url)\r\n      .then(\r\n        function (response) {\r\n          return response.json();\r\n        }\r\n      )\r\n      .then(\r\n        function (response) {\r\n\r\n\r\n          for (var key in response.query.search) {\r\n            pointerToThis.state.wikiSearchReturnValues.push({\r\n              queryResultPageFullURL: 'no link',\r\n              queryResultPageID: response.query.search[key].pageid,\r\n              queryResultPageTitle: response.query.search[key].title,\r\n              queryResultPageSnippet: response.query.search[key].snippet\r\n            });\r\n          }\r\n        }\r\n      )\r\n      .then(\r\n        function (response) {\r\n          for (var key2 in pointerToThis.state.wikiSearchReturnValues) {\r\n            // console.log(pointerToThis.state.wikiSearchReturnValues);\r\n            let page = pointerToThis.state.wikiSearchReturnValues[key2];\r\n            let pageID = page.queryResultPageID;\r\n            let urlForRetrievingPageURLByPageID = `https://en.wikipedia.org/w/api.php?origin=*&action=query&prop=info&pageids=${pageID}&inprop=url&format=json`;\r\n\r\n            fetch(urlForRetrievingPageURLByPageID)\r\n              .then(\r\n                function (response) {\r\n                  return response.json();\r\n                }\r\n              )\r\n              .then(\r\n                function (response) {\r\n                  page.queryResultPageFullURL = response.query.pages[pageID].fullurl;\r\n\r\n                  pointerToThis.forceUpdate();\r\n                }\r\n              )\r\n          }\r\n        }\r\n      )\r\n  }\r\n\r\n  changeWikiSearchTerms = (e) => {\r\n    this.setState({\r\n      WikiSearchTerms: e.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let wikiSearchResults = [];\r\n     console.log(this.state.wikiSearchReturnValues);\r\n\r\n\r\n\r\n    console.log(wikiSearchResults);\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Wikipedia Search Engine</h1>\r\n        <form action=\"\">\r\n          <input id=\"inutt\" value={this.state.wikiSearchTerms} type=\"text\" value={this.state.WikiSearchTerms || ''} onChange={this.changeWikiSearchTerms} placeholder={this.state.search} />\r\n          <button type='submit' onClick={this.useWikiSearchEngine}>Search</button>\r\n        </form>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ApiWikipedia;\r\n"]},"metadata":{},"sourceType":"module"}